{"version":3,"sources":["img/5.jpg","navigation.js","header.js","About.js","footer.js","Experience.js","serviceWorker.js","index.js"],"names":["module","exports","navigation","navLinks","map","section","href","className","this","props","logoTitle","Component","myStyles","backgroundImage","Background","height","backgroundSize","Header","style","id","title","button","About","name","footer","class","Experience","Boolean","window","location","hostname","match","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,+B,qPC6B5BC,G,mLAtBX,IAEMC,EAFW,CAAE,OAAQ,QAAS,WAAY,WAAY,SAAU,eAAgB,WAE5DC,KAAK,SAAAC,GAC3B,OACI,4BAAI,uBAAGC,KAAQ,IAAMD,GAAjB,IAA6BA,OAIzC,OACA,6BACI,wBAAIE,UAAU,QAAQC,KAAKC,MAAMC,WAEjC,4BACIP,Q,GAhBaQ,c,gBCAnBC,G,MAAU,CAEZC,gBAAgB,QAAD,OAAWC,IAAX,MACfC,OAAQ,OACRC,eAAgB,UA6BLC,E,uKAnBP,OACI,4BAAQC,MAASN,EAAUO,GAAG,QAC1B,4BAAKX,KAAKC,MAAMW,OAChB,uFACA,uBAAGd,KAAM,UAAUE,KAAKC,MAAMY,a,GATzBV,aCwCNW,G,6KAhDX,OACI,yBAAKf,UAAU,QAAQY,GAAG,SACtB,wCACA,yCACA,ylBAEA,yBAAKZ,UAAU,aACX,oDAEA,yBAAKA,UAAU,OAEX,6BACI,8BAAM,8BAAUgB,KAAK,wBACrB,+CACA,8JAGJ,6BACI,8BAAM,8BAAUA,KAAK,kBACrB,iDACA,uLAGJ,6BACI,8BAAM,8BAAUA,KAAK,qBACrB,8DACA,8J,GA5BJZ,cCiCLa,G,6KA/BX,OAEI,4BAAQC,MAAM,SAASN,GAAG,WACtB,uBAAGb,KAAK,+BAA+BmB,MAAM,gBAA7C,yBACA,wBAAIA,MAAM,eACN,wBAAIA,MAAM,qBACN,uBAAGA,MAAM,oBAAoBnB,KAAK,sBAC9B,uBAAGmB,MAAM,qBAQjB,wBAAIA,MAAM,qBACN,uBAAGA,MAAM,oBAAoBnB,KAAK,uBAC9B,uBAAGmB,MAAM,qBAGjB,wBAAIA,MAAM,qBACN,uBAAGA,MAAM,oBAAoBnB,KAAK,qCAC9B,uBAAGmB,MAAM,0B,GAxBZd,cCqDNe,G,6KAlDP,OAEI,yBAAKnB,UAAU,WAAWY,GAAG,YACzB,2CAEA,yBAAKZ,UAAU,OAEX,6BAEI,2DACA,oVAKJ,6BAEI,mDACA,sOAKJ,6BAEI,qDACA,spB,GA7BCI,cCSLgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,ICPAC,E,uKAEF,OACE,6BACA,kBAAC,EAAD,CAAYtB,UAAU,iBACtB,kBAAC,EAAD,CAAQU,MAAM,2BAA2BC,OAAO,kBAChD,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GARYV,aAiBlBsB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDuG3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2cad401a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/5.faff0439.jpg\";","import React, { Component } from 'react';\r\n// import './App.css';\r\nimport './navigation.css';\r\n\r\nclass navigation extends Component {\r\n  render(){\r\n\r\n    const sections = [ 'Home', 'About', 'Timeline', 'Projects', 'Resume', 'Publications', 'Contact' ];\r\n   \r\n    const navLinks = sections.map( section => {\r\n        return(\r\n            <li><a href = {'#' + section} > {section }</a></li>\r\n        )\r\n    });\r\n\r\n    return (\r\n    <nav>\r\n        <h2 className=\"logo\">{this.props.logoTitle}</h2>\r\n\r\n        <ul>\r\n           {navLinks}\r\n        </ul>\r\n\r\n    </nav>\r\n    );\r\n}\r\n}\r\n\r\n\r\nexport default navigation;\r\n\r\n// <li><a href=\"#home\">Home</a></li>\r\n// <li><a href=\"#about\">About</a></li>\r\n// <li><a href=\"#projects\">Projects</a></li>\r\n// <li><a href=\"#resume\">Resume</a></li>\r\n// <li><a href=\"#contact\">Contact</a></li>\r\n","import React, { Component } from 'react';\r\nimport Background from './img/5.jpg';\r\nimport './header.css'\r\n\r\nconst myStyles ={\r\n    // Below line code is using Backticks i.e. Console key  for writinng the url thing.\r\n    backgroundImage:  `url( ${Background} )`,\r\n    height: '80vh', //vh:means viewport like 80% of the entire page will be converted to image.\r\n    backgroundSize: 'cover'\r\n\r\n}\r\n\r\n\r\nclass Header extends Component{\r\n    \r\n    // const ham = './img/2.jfif';\r\n    \r\n    render(){\r\n        return (\r\n            <header style = {myStyles} id=\"Home\">\r\n                <h1>{this.props.title}</h1>\r\n                <p>Software Developement Engineer || Strategy || Researcher</p>\r\n                <a href =\"#About\">{this.props.button}</a>\r\n                \r\n            </header>\r\n\r\n        );\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport './about.css';\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"about\" id=\"About\">\r\n            <h2>About Me</h2>\r\n            <h4>Who Am I?</h4>\r\n            <p>Graduate Computer Science Engineer from Birla Institute of Technology and Science, Pilani, constantly keen, optimistic and passionate about Data Science, Software Development and at all times interested to know the answers about how, why and what linking to trending technologies around me so that I would be able to help the society and also to lead people from a life of hardship to a new life of comfort and wellbeing. I'd love to combine my passion for learning with my software development and data science skills to continue building learning products for people. </p>\r\n        \r\n            <div className=\"services1\">\r\n                <h2>A range of Expertise</h2>\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div>\r\n                        <span><ion-icon name=\"logo-web-component\"></ion-icon></span>\r\n                        <h3>Web Development</h3>\r\n                        <p>• I've experience working as Web Developer Intern, and  building websites using JavaScript, React.js, CSS, HTML, Node.js </p>\r\n                    </div> \r\n                    \r\n                    <div>\r\n                        <span><ion-icon name=\"moon-outline\"></ion-icon></span>\r\n                        <h3>Data Science Work</h3>\r\n                        <p>• Pursued my internship in the organizations, working in area of Machine Learning and Data Science and I did quite a few personal ML projects too.</p>\r\n                    </div> \r\n                    \r\n                    <div>\r\n                        <span><ion-icon name=\"receipt-outline\"></ion-icon></span>\r\n                        <h3>Data Structures and Algorithms</h3>\r\n                        <p>• As coming from the CS background, I have good grasp over fundamental concepts of Data Structures and Algorithms.</p>\r\n                    </div> \r\n                </div> \r\n                \r\n                {/* <a href=\"#work\" class=\"btn\">My Work</a> */}\r\n            </div>\r\n        \r\n        \r\n        \r\n        \r\n        </div>\r\n\r\n        \r\n        \r\n\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react'\r\nimport './footer.css';\r\n\r\nclass footer extends Component {\r\n  render() {\r\n    return (\r\n        // <!-- Footer -->\r\n        <footer class=\"footer\" id=\"Contact\">\r\n            <a href=\"mailto:asinghbits5@gmail.com\" class=\"footer__link\">asinghbits5@gmail.com</a>\r\n            <ul class=\"social-list\">\r\n                <li class=\"social-list__item\">\r\n                    <a class=\"social-list__link\" href=\"https://codepen.io\">\r\n                        <i class=\"fab fa-codepen\"></i>\r\n                    </a>\r\n                </li>\r\n                {/* <li class=\"social-list__item\">\r\n                    <a class=\"social-list__link\" href=\"http://dribbble.com\">\r\n                        <i class=\"fab fa-dribbble\"></i>\r\n                    </a>\r\n                </li> */}\r\n                <li class=\"social-list__item\">\r\n                    <a class=\"social-list__link\" href=\"https://twitter.com\">\r\n                        <i class=\"fab fa-twitter\"></i>\r\n                    </a>\r\n                </li>\r\n                <li class=\"social-list__item\">\r\n                    <a class=\"social-list__link\" href=\"https://github.com/iAnjaneySingh/\">\r\n                        <i class=\"fab fa-github\"></i>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default footer;","import React, { Component } from 'react';\r\nimport './Experience.css';\r\n\r\nclass Experience extends Component{\r\n        \r\n    render(){\r\n        return (\r\n            \r\n            <div className=\"services\" id=\"Timeline\">\r\n                <h2>Internships</h2>\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div>\r\n                        \r\n                        <h3>Software Development Intern</h3>\r\n                        <p>• Worked with the Spice Small Business team in their e-commerce division.\r\n                           • Designed navigation system, created REST-APIs, and developed a real-time dashboard that returns addresses of customers requiring services from the organization based on a few parameters.\r\n                            Technologies used: Java, JSON, Git.</p>\r\n                    </div> \r\n                    \r\n                    <div>\r\n                        \r\n                        <h3>Data Science Intern</h3>\r\n                        <p>• Quality Assurance and Software Debugging.\r\n                           • Case Studies on Exit analysis in Organizations using Machine Learning Algorithms.\r\n                           • Research on Sentiment analysis using Python and NTLK.</p>\r\n                    </div> \r\n                    \r\n                    <div>\r\n                        \r\n                        <h3>Data Analytics Intern</h3>\r\n                        <p>• Worked closely with Digital Marketing and Development team.\r\n                            • Responsible for creating Interactive Reports and Dashboards. It is now used to view user\r\n                            engagement metrics such as the number of active users and the summary of their activities on the\r\n                            website I worked on.\r\n                            • Analyzed large amounts of data to find patterns of inconsistencies and anomalies using Tableau.\r\n                            • Development of hundreds of Business Proposals and Improving Customer Relationship Management using Data Analytics.\r\n                            • Created a User-Friendly Model with its complete solution for the typical case study of Reseller Sales Analysis.</p>\r\n                    </div> \r\n                </div> \r\n                \r\n                {/* <a href=\"#work\" class=\"btn\">My Work</a> */}\r\n            </div>\r\n\r\n        );\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Experience;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport Navigation from './navigation'; \nimport Header from './header';\nimport About from './About';\nimport Footer from './footer';\nimport Experience from './Experience';\nimport * as serviceWorker from './serviceWorker';\n\nclass App extends Component{\n  render() {\n    return(\n      <div>\n      <Navigation logoTitle=\"My-Portfolio\" />\n      <Header title=\"Hi!... I'm Anjaney Singh\" button=\"More About Me\"/>\n      <About/>\n      <Experience/>\n      <Footer/>\n      </div>\n    );\n  }\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}